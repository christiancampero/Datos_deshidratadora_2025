name: Fetch Weather Data

# Se ejecuta cada 30 minutos
on:
  schedule:
    - cron: '*/30 * * * *'
  # Permite ejecutarlo manualmente desde la pestaña Actions
  workflow_dispatch:

jobs:
  fetch-and-log:
    runs-on: ubuntu-latest
    steps:
      # 1. Obtenemos el código del repositorio (para guardar el JSON)
      - name: Check out repo
        uses: actions/checkout@v4

      # 2. Configuramos Node.js para ejecutar el script
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. Instalamos 'node-fetch' para hacer peticiones HTTP
      - name: Install dependencies
        run: npm install node-fetch@2

      # 4. Ejecutamos el script de JS
      - name: Run fetch script
        run: node ./fetch_weather.js
        env:
          ACCUWEATHER_KEY: ${{ secrets.ACCUWEATHER_API_KEY }}
          THINGSPEAK_KEY: ${{ secrets.THINGSPEAK_API_KEY }}

      # 5. Guardamos los cambios (el nuevo data.json) en el repositorio
      - name: Commit and push if data changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add data.json
          # Solo hace commit si hay cambios reales en el archivo
          git diff --quiet --staged || (git commit -m "Log: Actualizar datos de temperatura" && git push)
